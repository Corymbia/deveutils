#!/bin/bash


function dropPrivs() {
  echo """
import resource
import subprocess
import os
import pwd
resource.setrlimit(resource.RLIMIT_NOFILE, (131072, 131072))
user = \"eucalyptus\"
pwnam = pwd.getpwnam(user)
os.setgid(pwnam.pw_gid)
os.setuid(pwnam.pw_uid)
print subprocess.call(\"${@}\", shell=True)
  """ | python
}

export DIR=$(mktemp -d /tmp/euca-ps-XXXX)
# jcmd -l/jps don't work right when run as user eucalyptus... unlike every other j{stack,map,etc} command.
export EUCAPID=$(jcmd -l | awk '/Eucalyptus/{print $1}');
export EUCAPREFIX=${DIR}/$(basename ${DIR})-$(date +%Y%m%d-%H%M.%S);
if [[ -z "${EUCAPID}" ]]; then
  echo Failed to Eucalyptus process id;
  exit 1
else

  echo Storing ${EUCAPID} info to ${EUCAPREFIX} >&2

  # echo Getting LWP thread dump for ${EUCAPID}...
  ps -Lo psr,ruser,pid,lwp,ppid,comm,start,time,pcpu,pmem,rss,vsize -q ${EUCAPID} 2>&1 > ${EUCAPREFIX}-ps-lwp.log

  # echo Getting thread dump for ${EUCAPID}...
  dropPrivs "jcmd ${EUCAPID} Thread.print" > ${EUCAPREFIX}-jstack.log 2>&1
  if [[ ! -e ${EUCAPREFIX}-jstack.log ]]; then
    echo Failed to obtain java thread stacks from JVM
    exit 1
  elif grep hs_error ${EUCAPREFIX}-jstack.log; then
    echo Failed to get thread stacks from JVM because of the above error
    exit 1
  else
    # echo Active threads...
    awk '$4 != $3' ${EUCAPREFIX}-ps-lwp.log |
    sort -n -k9 -r |
    awk -v jstack=${EUCAPREFIX}-jstack.log '
      $9 != "0.0" && $4 != "LWP" {
        cmd="printf %x "$4;
        cmd | getline nid;
        close(cmd);
        cmd2="grep -a nid=0x"nid" "jstack;
        cmd2 | getline jthread;
        close(cmd2);
        procinfo=$0" "gensub(" prio=.*","","g",jthread)"\n";
        output=output" "procinfo;
      }
      $4 == "LWP" {header=$0"    JTHREAD"}
      $9 != "0.0" {}
      END{
        print header;
        print output;
      }
    '
  fi
fi

